{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAfAO,KAAO,CAAEC,KAAMC,SAASC,cAAc,cA6BtCH,KAAKC,KAAKG,iBAAiB,UAAUC,IACnCA,EAAMC,iBACN,MACEC,UAAUd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,eAhBZ,SAA0BjB,EAAOe,EAAMC,GACrC,IAAK,IAAIE,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCpB,EAAcoB,EAAGlB,EAAQe,GAAQG,EAAI,IAClCC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAwB,OAAOC,QAAQ,uBAAuBtB,QAAeC,MAAS,IAE/DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAwB,OAAOG,QAAQ,sBAAsBxB,QAAeC,MAAS,GAGrE,CAOEwB,CACExB,EAAMyB,cACNV,EAAKU,cACLT,EAAOS,cAAa","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nrefs = { form: document.querySelector('form.form') };\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseGenerator(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + step * (i - 1))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  promiseGenerator(\n    delay.valueAsNumber,\n    step.valueAsNumber,\n    amount.valueAsNumber\n  );\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","refs","form","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$promiseGenerator","valueAsNumber"],"version":3,"file":"03-promises.d8faf4e9.js.map"}